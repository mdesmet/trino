/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.trino.operator;

import io.trino.spi.Page;
import io.trino.spi.connector.MergeProcessorUtilities;

public interface MergeRowChangeProcessor
        extends RowChangeProcessor
{
    public static final int DEFAULT_CASE_OPERATION_NUMBER = -1;

    /**
     * Transform a page generated by an SQL MERGE operation into page of data columns and
     * operations. The SQL MERGE inputPage consists of the write redistribution
     * column values; followed by the rowId block; followed by the merge case RowBlock;
     * followed by a hash column block for partitioned or bucketed tables in some connectors.
     * The result is a page starting with all non-hidden columns computed by the SQL MERGE
     * operation, in table column order, followed by rowId column, followed by the "operation"
     * block whose values are {@link MergeProcessorUtilities#INSERT_OPERATION_NUMBER},
     * {@link MergeProcessorUtilities#DELETE_OPERATION_NUMBER}, or
     * {@link MergeProcessorUtilities#UPDATE_OPERATION_NUMBER}. In some implementations,
     * a row in the inputPage can give rise to multiple rows in the transformed page.
     */
    @Override
    Page transformPage(Page inputPage);
}
